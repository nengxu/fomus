;;; -*- mode: lisp; syntax: common-lisp; package: cl-user; base: 10 -*-

;;; The purpose of this file is helping people that do not want to install
;;; the iterate library

;;; !!! do not edit this file has been automatically generated from ads.lisp
;;;     whose terms and conditions equally apply for this file too


(DEFPACKAGE :ADS (:USE :CL)
            (:EXPORT MAKE-INT-VAR-FROM-TO MAKE-INT-VAR-DOMAIN POST ADS EXAMPLE
             ACC-NOKEY2)) 
(IN-PACKAGE :ADS) 
(SETF *PRINT-CIRCLE* T) 
(DEFSTRUCT VAR DOMAIN CONSTRAINTS VALUE (TABU 0) PROJ-COST) 
(DEFUN VAR-SET-RANDOMLY (VAR)
  (SETF (VAR-VALUE VAR)
          (NTH (RANDOM (LENGTH (VAR-DOMAIN VAR))) (VAR-DOMAIN VAR)))) 
(DEFUN VAR-COMPUTE-PROJ-COST (VAR)
  (LET* ((LIST2663 NIL) (C NIL) (RESULT2662 0))
    (BLOCK NIL
      (TAGBODY
        (SETQ LIST2663 (VAR-CONSTRAINTS VAR))
       LOOP-TOP-NIL
        (IF (ATOM LIST2663) (GO LOOP-END-NIL))
        (SETQ C (CAR LIST2663))
        (SETQ LIST2663 (CDR LIST2663))
        (SETQ RESULT2662 (+ RESULT2662 (CONSTRAINT-COST C)))
        (GO LOOP-TOP-NIL)
       LOOP-END-NIL)
      RESULT2662))) 
(DEFUN VAR-UPDATE-PROJ-COST (VAR)
  (SETF (VAR-PROJ-COST VAR) (VAR-COMPUTE-PROJ-COST VAR))) 
(DEFUN MAKE-INT-VAR-FROM-TO (FROM TO)
  (MAKE-VAR :DOMAIN
            (LET* ((I NIL)
                   (LIMIT2665 NIL)
                   (RESULT2664 NIL)
                   (END-POINTER2666 NIL)
                   (TEMP2667 NIL))
              (BLOCK NIL
                (TAGBODY
                  (SETQ LIMIT2665 TO)
                  (SETQ I (- FROM 1))
                 LOOP-TOP-NIL
                  (SETQ I (+ I 1))
                  (IF (> I LIMIT2665) (GO LOOP-END-NIL))
                  (PROGN
                   (SETQ TEMP2667 (LIST I))
                   (SETQ END-POINTER2666
                           (IF RESULT2664 (SETF (CDR END-POINTER2666) TEMP2667)
                               (SETQ RESULT2664 TEMP2667)))
                   RESULT2664)
                  (GO LOOP-TOP-NIL)
                 LOOP-END-NIL)
                RESULT2664)))) 
(DEFUN MAKE-INT-VAR-DOMAIN (DOMAIN) (MAKE-VAR :DOMAIN DOMAIN)) 
(DEFSTRUCT CONSTRAINT VARS COSTFN COST) 
(DEFUN CONSTRAINT-COMPUTE-COST (CONSTRAINT)
  (APPLY (CONSTRAINT-COSTFN CONSTRAINT) (CONSTRAINT-VARS CONSTRAINT))) 
(DEFUN CONSTRAINT-UPDATE-COST (CONSTRAINT)
  (SETF (CONSTRAINT-COST CONSTRAINT) (CONSTRAINT-COMPUTE-COST CONSTRAINT))) 
(DEFUN POST (FORM &REST VARS)
  (FLET ((VAR-SYMS (NUM)
           (LET* ((I NIL)
                  (LIMIT2669 NIL)
                  (RESULT2668 NIL)
                  (END-POINTER2670 NIL)
                  (TEMP2671 NIL))
             (BLOCK NIL
               (TAGBODY
                 (SETQ LIMIT2669 NUM)
                 (SETQ I 0)
                LOOP-TOP-NIL
                 (SETQ I (+ I 1))
                 (IF (> I LIMIT2669) (GO LOOP-END-NIL))
                 (PROGN
                  (SETQ TEMP2671 (LIST (INTERN (FORMAT NIL "V~A" I) "ADS")))
                  (SETQ END-POINTER2670
                          (IF RESULT2668 (SETF (CDR END-POINTER2670) TEMP2671)
                              (SETQ RESULT2668 TEMP2671)))
                  RESULT2668)
                 (GO LOOP-TOP-NIL)
                LOOP-END-NIL)
               RESULT2668))))
    (LET* ((VAR-SYMS (VAR-SYMS (LENGTH VARS)))
           (C
            (MAKE-CONSTRAINT :VARS VARS :COSTFN
                             (COMPILE NIL
                                      `(LAMBDA ,VAR-SYMS
                                         (LET (SB-IMPL::BACKQ-COMMA
                                               (LET*
                                                ((LIST2673 NIL) (S NIL)
                                                 (RESULT2672 NIL)
                                                 (END-POINTER2674 NIL)
                                                 (TEMP2675 NIL))
                                                (BLOCK NIL
                                                  (TAGBODY
                                                    (SETQ LIST2673 VAR-SYMS)
                                                   LOOP-TOP-NIL
                                                    (IF (ATOM LIST2673)
                                                        (GO LOOP-END-NIL))
                                                    (SETQ S (CAR LIST2673))
                                                    (SETQ LIST2673
                                                            (CDR LIST2673))
                                                    (PROGN
                                                     (SETQ TEMP2675
                                                             (LIST
                                                              `(,S
                                                                (VAR-VALUE
                                                                 ,S))))
                                                     (SETQ END-POINTER2674
                                                             (IF RESULT2672
                                                                 (SETF (CDR
                                                                        END-POINTER2674)
                                                                         TEMP2675)
                                                                 (SETQ RESULT2672
                                                                         TEMP2675)))
                                                     RESULT2672)
                                                    (GO LOOP-TOP-NIL)
                                                   LOOP-END-NIL)
                                                  RESULT2672)))
                                           ,FORM))))))
      (DOLIST (V VARS) (PUSH C (VAR-CONSTRAINTS V)))
      C))) 
(DEFUN COLLECT-CONSTRAINTS (VARS)
  (LET* ((LIST2677 NIL)
         (V NIL)
         (RESULT2676 NIL)
         (END-POINTER2680 NIL)
         (TEMP2681 NIL))
    (BLOCK TOP
      (TAGBODY
        (SETQ LIST2677 VARS)
       LOOP-TOP-TOP
        (IF (ATOM LIST2677) (GO LOOP-END-TOP))
        (SETQ V (CAR LIST2677))
        (SETQ LIST2677 (CDR LIST2677))
        (LET* ((LIST2679 NIL) (C NIL))
          (BLOCK NIL
            (TAGBODY
              (SETQ LIST2679 (VAR-CONSTRAINTS V))
             LOOP-TOP-NIL
              (IF (ATOM LIST2679) (GO LOOP-END-NIL))
              (SETQ C (CAR LIST2679))
              (SETQ LIST2679 (CDR LIST2679))
              (PROGN
               (WHEN (NOT (MEMBER C RESULT2676 :TEST #'EQL))
                 (SETQ TEMP2681 (LIST C))
                 (SETQ END-POINTER2680
                         (IF RESULT2676 (SETF (CDR END-POINTER2680) TEMP2681)
                             (SETQ RESULT2676 TEMP2681))))
               RESULT2676)
              (GO LOOP-TOP-NIL)
             LOOP-END-NIL)
            NIL))
        (GO LOOP-TOP-TOP)
       LOOP-END-TOP)
      RESULT2676))) 
(DEFUN PRINT-INFO (VARS GLOBAL-COST)
  (TERPRI)
  (PRINC
   (LIST '***VAR-VALUE
         (LET* ((LIST2683 NIL)
                (V NIL)
                (RESULT2682 NIL)
                (END-POINTER2684 NIL)
                (TEMP2685 NIL))
           (BLOCK NIL
             (TAGBODY
               (SETQ LIST2683 VARS)
              LOOP-TOP-NIL
               (IF (ATOM LIST2683) (GO LOOP-END-NIL))
               (SETQ V (CAR LIST2683))
               (SETQ LIST2683 (CDR LIST2683))
               (PROGN
                (SETQ TEMP2685
                        (LIST
                         (IF (ZEROP (VAR-TABU V))
                             (FORMAT NIL " ~a" (VAR-VALUE V))
                             (FORMAT NIL "^~a" (VAR-VALUE V)))))
                (SETQ END-POINTER2684
                        (IF RESULT2682 (SETF (CDR END-POINTER2684) TEMP2685)
                            (SETQ RESULT2682 TEMP2685)))
                RESULT2682)
               (GO LOOP-TOP-NIL)
              LOOP-END-NIL)
             RESULT2682))
         'GLOBAL-COST GLOBAL-COST 'PROJ-COST (MAPCAR #'VAR-PROJ-COST VARS)))) 
(DEFUN CONSISTENCY-CHECK (VARS CONSTRAINTS GLOBAL-COST)
  (LET* ((CONSTRAINTS-COSTS
          (LET* ((LIST2687 NIL)
                 (C NIL)
                 (RESULT2686 NIL)
                 (END-POINTER2688 NIL)
                 (TEMP2689 NIL))
            (BLOCK NIL
              (TAGBODY
                (SETQ LIST2687 CONSTRAINTS)
               LOOP-TOP-NIL
                (IF (ATOM LIST2687) (GO LOOP-END-NIL))
                (SETQ C (CAR LIST2687))
                (SETQ LIST2687 (CDR LIST2687))
                (PROGN
                 (SETQ TEMP2689 (LIST (CONSTRAINT-COMPUTE-COST C)))
                 (SETQ END-POINTER2688
                         (IF RESULT2686 (SETF (CDR END-POINTER2688) TEMP2689)
                             (SETQ RESULT2686 TEMP2689)))
                 RESULT2686)
                (GO LOOP-TOP-NIL)
               LOOP-END-NIL)
              RESULT2686)))
         (GC (APPLY #'+ CONSTRAINTS-COSTS))
         (VARS-PROJS
          (LET* ((LIST2691 NIL)
                 (VAR NIL)
                 (RESULT2690 NIL)
                 (END-POINTER2692 NIL)
                 (TEMP2695 NIL))
            (BLOCK NIL
              (TAGBODY
                (SETQ LIST2691 VARS)
               LOOP-TOP-NIL
                (IF (ATOM LIST2691) (GO LOOP-END-NIL))
                (SETQ VAR (CAR LIST2691))
                (SETQ LIST2691 (CDR LIST2691))
                (PROGN
                 (SETQ TEMP2695
                         (LIST
                          (LET* ((LIST2694 NIL)
                                 (C NIL)
                                 (COST NIL)
                                 (RESULT2693 0))
                            (BLOCK NIL
                              (TAGBODY
                                (SETQ LIST2694 (VAR-CONSTRAINTS VAR))
                               LOOP-TOP-NIL
                                (IF (ATOM LIST2694) (GO LOOP-END-NIL))
                                (SETQ C (CAR LIST2694))
                                (SETQ LIST2694 (CDR LIST2694))
                                (SETQ COST
                                        (NTH (POSITION C CONSTRAINTS)
                                             CONSTRAINTS-COSTS))
                                (SETQ RESULT2693 (+ RESULT2693 COST))
                                (GO LOOP-TOP-NIL)
                               LOOP-END-NIL)
                              RESULT2693))))
                 (SETQ END-POINTER2692
                         (IF RESULT2690 (SETF (CDR END-POINTER2692) TEMP2695)
                             (SETQ RESULT2690 TEMP2695)))
                 RESULT2690)
                (GO LOOP-TOP-NIL)
               LOOP-END-NIL)
              RESULT2690))))
    (ASSERT (= GC GLOBAL-COST))
    (LET* ((LIST2697 NIL) (C NIL) (LIST2698 NIL) (COST NIL))
      (BLOCK NIL
        (TAGBODY
          (SETQ LIST2697 CONSTRAINTS)
          (SETQ LIST2698 CONSTRAINTS-COSTS)
         LOOP-TOP-NIL
          (IF (ATOM LIST2697) (GO LOOP-END-NIL))
          (SETQ C (CAR LIST2697))
          (SETQ LIST2697 (CDR LIST2697))
          (IF (ATOM LIST2698) (GO LOOP-END-NIL))
          (SETQ COST (CAR LIST2698))
          (SETQ LIST2698 (CDR LIST2698))
          (ASSERT (= (CONSTRAINT-COST C) COST))
          (GO LOOP-TOP-NIL)
         LOOP-END-NIL)
        NIL))
    (LET* ((LIST2700 NIL) (VAR NIL) (LIST2701 NIL) (PROJ NIL))
      (BLOCK NIL
        (TAGBODY
          (SETQ LIST2700 VARS)
          (SETQ LIST2701 VARS-PROJS)
         LOOP-TOP-NIL
          (IF (ATOM LIST2700) (GO LOOP-END-NIL))
          (SETQ VAR (CAR LIST2700))
          (SETQ LIST2700 (CDR LIST2700))
          (IF (ATOM LIST2701) (GO LOOP-END-NIL))
          (SETQ PROJ (CAR LIST2701))
          (SETQ LIST2701 (CDR LIST2701))
          (ASSERT (= PROJ (VAR-PROJ-COST VAR)))
          (GO LOOP-TOP-NIL)
         LOOP-END-NIL)
        NIL)))) 
(DEFUN ADS
       (VARS
        &KEY (TABU-TENURE 3) (MAX-ITERATIONS 20) (RESET-LIMIT (LENGTH VARS))
        (RESET-PERCENTAGE 100))
  (UNLESS (= 100 RESET-PERCENTAGE)
    (WARN "Sorry, assuming (= 100 reset-percentage)"))
  (LET ((CONSTRAINTS (COLLECT-CONSTRAINTS VARS)))
    (DOLIST (V VARS) (VAR-SET-RANDOMLY V))
    (DOLIST (C CONSTRAINTS) (CONSTRAINT-UPDATE-COST C))
    (DOLIST (V VARS) (VAR-UPDATE-PROJ-COST V))
    (LET* ((BEST-SOL NIL)
           (BEST-COST MOST-POSITIVE-FIXNUM)
           (TABU-COUNT 0)
           (COUNT2703 NIL)
           (GLOBAL-COST NIL))
      (BLOCK NIL
        (TAGBODY
          (SETQ COUNT2703 MAX-ITERATIONS)
         LOOP-TOP-NIL
          (IF (<= COUNT2703 0) (GO LOOP-END-NIL))
          (SETQ GLOBAL-COST
                  (LET* ((LIST2705 NIL) (C NIL) (RESULT2704 0))
                    (BLOCK NIL
                      (TAGBODY
                        (SETQ LIST2705 CONSTRAINTS)
                       LOOP-TOP-NIL
                        (IF (ATOM LIST2705) (GO LOOP-END-NIL))
                        (SETQ C (CAR LIST2705))
                        (SETQ LIST2705 (CDR LIST2705))
                        (SETQ RESULT2704 (+ RESULT2704 (CONSTRAINT-COST C)))
                        (GO LOOP-TOP-NIL)
                       LOOP-END-NIL)
                      RESULT2704)))
          (CONSISTENCY-CHECK VARS CONSTRAINTS GLOBAL-COST)
          (IF (ZEROP GLOBAL-COST)
              (PROGN
               NIL
               (PROGN
                (SETQ BEST-COST 0)
                (SETQ BEST-SOL (MAPCAR #'VAR-VALUE VARS)))
               (GO LOOP-END-NIL))
              NIL)
          (IF (<= RESET-LIMIT TABU-COUNT)
              (PROGN
               NIL
               (IF (< GLOBAL-COST BEST-COST)
                   (PROGN
                    NIL
                    (PROGN
                     (SETQ BEST-COST GLOBAL-COST)
                     (SETQ BEST-SOL (MAPCAR #'VAR-VALUE VARS))))
                   NIL)
               (BLOCK NIL
                 (LET ((N-LIST3149 VARS))
                   (TAGBODY
                    START3150
                     (IF (NOT (ENDP N-LIST3149))
                         (PROGN
                          NIL
                          (LET ((V (CAR N-LIST3149)))
                            (SETQ N-LIST3149 (CDR N-LIST3149))
                            (TAGBODY
                              (VAR-SET-RANDOMLY V)
                              (LET* ((G3152 V))
                                (MULTIPLE-VALUE-BIND
                                    (G3151)
                                    0
                                  (FUNCALL #'(SETF VAR-TABU) G3151 G3152)))))
                          (GO START3150))
                         NIL)))
                 NIL)
               (SETQ TABU-COUNT 0)
               (BLOCK NIL
                 (LET ((N-LIST3153 CONSTRAINTS))
                   (TAGBODY
                    START3154
                     (IF (NOT (ENDP N-LIST3153))
                         (PROGN
                          NIL
                          (LET ((C (CAR N-LIST3153)))
                            (SETQ N-LIST3153 (CDR N-LIST3153))
                            (TAGBODY (CONSTRAINT-UPDATE-COST C)))
                          (GO START3154))
                         NIL)))
                 NIL)
               (BLOCK NIL
                 (LET ((N-LIST3155 VARS))
                   (TAGBODY
                    START3156
                     (IF (NOT (ENDP N-LIST3155))
                         (PROGN
                          NIL
                          (LET ((V (CAR N-LIST3155)))
                            (SETQ N-LIST3155 (CDR N-LIST3155))
                            (TAGBODY (VAR-UPDATE-PROJ-COST V)))
                          (GO START3156))
                         NIL)))
                 NIL)
               (SETQ GLOBAL-COST
                       (LET* ((LIST2707 NIL) (C NIL) (RESULT2706 0))
                         (BLOCK NIL
                           (TAGBODY
                             (SETQ LIST2707 CONSTRAINTS)
                            LOOP-TOP-NIL
                             (IF (ATOM LIST2707) (GO LOOP-END-NIL))
                             (SETQ C (CAR LIST2707))
                             (SETQ LIST2707 (CDR LIST2707))
                             (SETQ RESULT2706
                                     (+ RESULT2706 (CONSTRAINT-COST C)))
                             (GO LOOP-TOP-NIL)
                            LOOP-END-NIL)
                           RESULT2706)))
               (CONSISTENCY-CHECK VARS CONSTRAINTS GLOBAL-COST))
              NIL)
          (LET ((WORST-VAR
                 (LET* ((LIST2709 NIL)
                        (V NIL)
                        (TEMP2710 NIL)
                        (RESULT2708 NIL)
                        (MAX2711 NIL)
                        (FIRST-TIME2712 T))
                   (BLOCK NIL
                     (TAGBODY
                       (SETQ LIST2709 VARS)
                      LOOP-TOP-NIL
                       (IF (ATOM LIST2709) (GO LOOP-END-NIL))
                       (SETQ V (CAR LIST2709))
                       (SETQ LIST2709 (CDR LIST2709))
                       (IF (< 1 (VAR-TABU V))
                           (PROGN
                            (LET* ((G3158 V)
                                   (G3159 1)
                                   (G3157 (- (VAR-TABU G3158) G3159)))
                              (FUNCALL #'(SETF VAR-TABU) G3157 G3158)))
                           (IF T
                               (PROGN
                                (IF (= 1 (VAR-TABU V))
                                    (PROGN
                                     NIL
                                     (LET* ((G3161 V)
                                            (G3162 1)
                                            (G3160 (- (VAR-TABU G3161) G3162)))
                                       (FUNCALL #'(SETF VAR-TABU) G3160 G3161))
                                     (LET* ((G3164 1)
                                            (G3163 (- TABU-COUNT G3164)))
                                       (SETQ TABU-COUNT G3163)))
                                    NIL)
                                (SETQ TEMP2710 (VAR-PROJ-COST V))
                                (IF FIRST-TIME2712
                                    (PROGN
                                     (SETQ FIRST-TIME2712 NIL)
                                     (SETQ MAX2711 TEMP2710)
                                     (SETQ RESULT2708 V))
                                    (IF T
                                        (PROGN
                                         (IF (> TEMP2710 MAX2711)
                                             (PROGN
                                              (SETQ MAX2711 TEMP2710)
                                              (SETQ RESULT2708 V))
                                             (IF T (PROGN RESULT2708) NIL)))
                                        NIL)))
                               NIL))
                       (GO LOOP-TOP-NIL)
                      LOOP-END-NIL)
                     RESULT2708))))
            (IF (NOT WORST-VAR) (PROGN NIL (ERROR "no var is movable")) NIL)
            (LET* ((OLD-VALUE (VAR-VALUE WORST-VAR))
                   (LIST2714 NIL)
                   (POSSIBLE-MOVE NIL)
                   (PROJ NIL)
                   (TEMP2715 NIL)
                   (MOVE-PROJ NIL)
                   (MIN2716 NIL)
                   (FIRST-TIME2717 T))
              (BLOCK NIL
                (TAGBODY
                  (SETQ LIST2714 (VAR-DOMAIN WORST-VAR))
                 LOOP-TOP-NIL
                  (IF (ATOM LIST2714) (GO LOOP-END-NIL))
                  (SETQ POSSIBLE-MOVE (CAR LIST2714))
                  (SETQ LIST2714 (CDR LIST2714))
                  (LET* ((G3166 WORST-VAR))
                    (MULTIPLE-VALUE-BIND
                        (G3165)
                        POSSIBLE-MOVE
                      (FUNCALL #'(SETF VAR-VALUE) G3165 G3166)))
                  (BLOCK NIL
                    (LET ((N-LIST3167 (VAR-CONSTRAINTS WORST-VAR)))
                      (TAGBODY
                       START3168
                        (IF (NOT (ENDP N-LIST3167))
                            (PROGN
                             NIL
                             (LET ((C (CAR N-LIST3167)))
                               (SETQ N-LIST3167 (CDR N-LIST3167))
                               (TAGBODY (CONSTRAINT-UPDATE-COST C)))
                             (GO START3168))
                            NIL)))
                    NIL)
                  (SETQ PROJ (VAR-COMPUTE-PROJ-COST WORST-VAR))
                  (SETQ TEMP2715 PROJ)
                  (IF FIRST-TIME2717
                      (PROGN
                       (SETQ FIRST-TIME2717 NIL)
                       (SETQ MIN2716 TEMP2715)
                       (SETQ MOVE-PROJ (CONS POSSIBLE-MOVE PROJ)))
                      (IF T
                          (PROGN
                           (IF (< TEMP2715 MIN2716)
                               (PROGN
                                (SETQ MIN2716 TEMP2715)
                                (SETQ MOVE-PROJ (CONS POSSIBLE-MOVE PROJ)))
                               (IF T (PROGN MOVE-PROJ) NIL)))
                          NIL))
                  (GO LOOP-TOP-NIL)
                 LOOP-END-NIL
                  (DESTRUCTURING-BIND
                      (MOVE . PROJ)
                      MOVE-PROJ
                    (COND
                     ((< PROJ (VAR-PROJ-COST WORST-VAR))
                      (SETF (VAR-VALUE WORST-VAR)
                              MOVE
                            (VAR-PROJ-COST WORST-VAR)
                              PROJ
                            (VAR-TABU WORST-VAR)
                              2)
                      (INCF TABU-COUNT))
                     (T
                      (SETF (VAR-VALUE WORST-VAR)
                              OLD-VALUE
                            (VAR-TABU WORST-VAR)
                              TABU-TENURE)
                      (INCF TABU-COUNT))))
                  (LET* ((LIST2719 NIL)
                         (C NIL)
                         (DIRTY-VARS NIL)
                         (END-POINTER2720 NIL)
                         (TEMP2721 NIL))
                    (BLOCK NIL
                      (TAGBODY
                        (SETQ LIST2719 (VAR-CONSTRAINTS WORST-VAR))
                       LOOP-TOP-NIL
                        (IF (ATOM LIST2719) (GO LOOP-END-NIL))
                        (SETQ C (CAR LIST2719))
                        (SETQ LIST2719 (CDR LIST2719))
                        (CONSTRAINT-UPDATE-COST C)
                        (BLOCK NIL
                          (LET ((N-LIST3172 (CONSTRAINT-VARS C)))
                            (TAGBODY
                             START3173
                              (IF (NOT (ENDP N-LIST3172))
                                  (PROGN
                                   NIL
                                   (LET ((V (CAR N-LIST3172)))
                                     (SETQ N-LIST3172 (CDR N-LIST3172))
                                     (TAGBODY
                                       (PROGN
                                        (IF
                                         (NOT
                                          (MEMBER V DIRTY-VARS :TEST #'EQL))
                                         (PROGN
                                          NIL
                                          (SETQ TEMP2721 (LIST V))
                                          (SETQ END-POINTER2720
                                                  (IF DIRTY-VARS
                                                      (SETF (CDR
                                                             END-POINTER2720)
                                                              TEMP2721)
                                                      (SETQ DIRTY-VARS
                                                              TEMP2721))))
                                         NIL)
                                        DIRTY-VARS)))
                                   (GO START3173))
                                  NIL)))
                          NIL)
                        (GO LOOP-TOP-NIL)
                       LOOP-END-NIL
                        (MAPC #'VAR-UPDATE-PROJ-COST DIRTY-VARS))
                      NIL)))
                NIL)))
          (SETQ COUNT2703 (1- COUNT2703))
          (GO LOOP-TOP-NIL)
         LOOP-END-NIL
          (WHEN BEST-SOL
            (LET* ((LIST2723 NIL) (V NIL) (LIST2724 NIL) (X NIL))
              (BLOCK NIL
                (TAGBODY
                  (SETQ LIST2723 VARS)
                  (SETQ LIST2724 BEST-SOL)
                 LOOP-TOP-NIL
                  (IF (ATOM LIST2723) (GO LOOP-END-NIL))
                  (SETQ V (CAR LIST2723))
                  (SETQ LIST2723 (CDR LIST2723))
                  (IF (ATOM LIST2724) (GO LOOP-END-NIL))
                  (SETQ X (CAR LIST2724))
                  (SETQ LIST2724 (CDR LIST2724))
                  (LET* ((G3177 V))
                    (MULTIPLE-VALUE-BIND
                        (G3176)
                        X
                      (FUNCALL #'(SETF VAR-VALUE) G3176 G3177)))
                  (GO LOOP-TOP-NIL)
                 LOOP-END-NIL)
                NIL)))
          (DOLIST (C CONSTRAINTS) (CONSTRAINT-UPDATE-COST C))
          (DOLIST (V VARS) (VAR-UPDATE-PROJ-COST V))
          (SETQ GLOBAL-COST
                  (LET* ((LIST2726 NIL) (C NIL) (RESULT2725 0))
                    (BLOCK NIL
                      (TAGBODY
                        (SETQ LIST2726 CONSTRAINTS)
                       LOOP-TOP-NIL
                        (IF (ATOM LIST2726) (GO LOOP-END-NIL))
                        (SETQ C (CAR LIST2726))
                        (SETQ LIST2726 (CDR LIST2726))
                        (SETQ RESULT2725 (+ RESULT2725 (CONSTRAINT-COST C)))
                        (GO LOOP-TOP-NIL)
                       LOOP-END-NIL)
                      RESULT2725)))
          (CONSISTENCY-CHECK VARS CONSTRAINTS GLOBAL-COST)
          (RETURN (VALUES (MAPCAR #'VAR-VALUE VARS) GLOBAL-COST)))
        NIL)))) 
(DEFUN EXAMPLE ()
  (LET ((L
         (LIST (MAKE-INT-VAR-FROM-TO 1 5) (MAKE-INT-VAR-FROM-TO 1 5)
               (MAKE-INT-VAR-FROM-TO 1 5))))
    (POST '(ABS (- V1 V2)) (FIRST L) (SECOND L))
    (POST '(MAX (- 10 (ABS (- V1 V2))) 0) (SECOND L) (THIRD L))
    (POST
     '(LET ((SUM (+ V1 V2 V3)))
        (IF (< 10 SUM) 0 (- 10 SUM)))
     (FIRST L) (SECOND L) (THIRD L))
    (ADS L))) 
(DEFUN CARTESIAN-PROD (LIST1 LIST2)
  (LET* ((LIST2728 NIL)
         (E1 NIL)
         (RESULT2727 NIL)
         (END-POINTER2731 NIL)
         (TEMP2732 NIL))
    (BLOCK TOP
      (TAGBODY
        (SETQ LIST2728 LIST1)
       LOOP-TOP-TOP
        (IF (ATOM LIST2728) (GO LOOP-END-TOP))
        (SETQ E1 (CAR LIST2728))
        (SETQ LIST2728 (CDR LIST2728))
        (LET* ((LIST2730 NIL) (E2 NIL))
          (BLOCK NIL
            (TAGBODY
              (SETQ LIST2730 LIST2)
             LOOP-TOP-NIL
              (IF (ATOM LIST2730) (GO LOOP-END-NIL))
              (SETQ E2 (CAR LIST2730))
              (SETQ LIST2730 (CDR LIST2730))
              (PROGN
               (SETQ TEMP2732 (LIST (LIST E1 E2)))
               (SETQ END-POINTER2731
                       (IF RESULT2727 (SETF (CDR END-POINTER2731) TEMP2732)
                           (SETQ RESULT2727 TEMP2732)))
               RESULT2727)
              (GO LOOP-TOP-NIL)
             LOOP-END-NIL)
            NIL))
        (GO LOOP-TOP-TOP)
       LOOP-END-TOP)
      RESULT2727))) 
(DEFUN ACC-NOKEY2 (EVS)
  (LET* ((MIDIS (MAPCAR #'FOMUS:EVENT-NOTE EVS))
         (DOMAIN-DATA
          (LET* ((LIST2734 NIL)
                 (M NIL)
                 (RESULT2733 NIL)
                 (END-POINTER2735 NIL)
                 (TEMP2740 NIL))
            (BLOCK NIL
              (TAGBODY
                (SETQ LIST2734 MIDIS)
               LOOP-TOP-NIL
                (IF (ATOM LIST2734) (GO LOOP-END-NIL))
                (SETQ M (CAR LIST2734))
                (SETQ LIST2734 (CDR LIST2734))
                (PROGN
                 (SETQ TEMP2740
                         (LIST
                          (LET* ((LIST2737 NIL)
                                 (ACC NIL)
                                 (WHITE-NOTE NIL)
                                 (RESULT2736 NIL)
                                 (END-POINTER2738 NIL)
                                 (TEMP2739 NIL))
                            (BLOCK NIL
                              (TAGBODY
                                (SETQ LIST2737 '(0 -1 1))
                               LOOP-TOP-NIL
                                (IF (ATOM LIST2737) (GO LOOP-END-NIL))
                                (SETQ ACC (CAR LIST2737))
                                (SETQ LIST2737 (CDR LIST2737))
                                (SETQ WHITE-NOTE (FOMUS::NOTESPELLING M ACC))
                                (IF WHITE-NOTE
                                    (PROGN
                                     NIL
                                     (PROGN
                                      (SETQ TEMP2739
                                              (LIST (LIST M WHITE-NOTE ACC)))
                                      (SETQ END-POINTER2738
                                              (IF RESULT2736
                                                  (SETF (CDR END-POINTER2738)
                                                          TEMP2739)
                                                  (SETQ RESULT2736 TEMP2739)))
                                      RESULT2736))
                                    NIL)
                                (GO LOOP-TOP-NIL)
                               LOOP-END-NIL)
                              RESULT2736))))
                 (SETQ END-POINTER2735
                         (IF RESULT2733 (SETF (CDR END-POINTER2735) TEMP2740)
                             (SETQ RESULT2733 TEMP2740)))
                 RESULT2733)
                (GO LOOP-TOP-NIL)
               LOOP-END-NIL)
              RESULT2733)))
         (VARS
          (LET* ((LIST2742 NIL)
                 (D NIL)
                 (RESULT2741 NIL)
                 (END-POINTER2743 NIL)
                 (TEMP2744 NIL))
            (BLOCK NIL
              (TAGBODY
                (SETQ LIST2742 DOMAIN-DATA)
               LOOP-TOP-NIL
                (IF (ATOM LIST2742) (GO LOOP-END-NIL))
                (SETQ D (CAR LIST2742))
                (SETQ LIST2742 (CDR LIST2742))
                (PROGN
                 (SETQ TEMP2744
                         (LIST (MAKE-INT-VAR-FROM-TO 0 (1- (LENGTH D)))))
                 (SETQ END-POINTER2743
                         (IF RESULT2741 (SETF (CDR END-POINTER2743) TEMP2744)
                             (SETQ RESULT2741 TEMP2744)))
                 RESULT2741)
                (GO LOOP-TOP-NIL)
               LOOP-END-NIL)
              RESULT2741))))
    (LET* ((LIST2746 NIL)
           (A NIL)
           (LIST2747 NIL)
           (B NIL)
           (LIST2748 NIL)
           (ADATA NIL)
           (LIST2749 NIL)
           (BDATA NIL)
           (CART NIL)
           (COSTS NIL))
      (BLOCK NIL
        (TAGBODY
          (SETQ LIST2746 VARS)
          (SETQ LIST2747 (CDR VARS))
          (SETQ LIST2748 DOMAIN-DATA)
          (SETQ LIST2749 (CDR DOMAIN-DATA))
         LOOP-TOP-NIL
          (IF (ATOM LIST2746) (GO LOOP-END-NIL))
          (SETQ A (CAR LIST2746))
          (SETQ LIST2746 (CDR LIST2746))
          (IF (ATOM LIST2747) (GO LOOP-END-NIL))
          (SETQ B (CAR LIST2747))
          (SETQ LIST2747 (CDR LIST2747))
          (IF (ATOM LIST2748) (GO LOOP-END-NIL))
          (SETQ ADATA (CAR LIST2748))
          (SETQ LIST2748 (CDR LIST2748))
          (IF (ATOM LIST2749) (GO LOOP-END-NIL))
          (SETQ BDATA (CAR LIST2749))
          (SETQ LIST2749 (CDR LIST2749))
          (SETQ CART (CARTESIAN-PROD (VAR-DOMAIN A) (VAR-DOMAIN B)))
          (SETQ COSTS
                  (COERCE
                   (LET* ((LIST2751 NIL)
                          (B-IND NIL)
                          (BD NIL)
                          (RESULT2750 NIL)
                          (END-POINTER2754 NIL)
                          (TEMP2755 NIL))
                     (BLOCK TOP
                       (TAGBODY
                         (SETQ LIST2751 (VAR-DOMAIN B))
                        LOOP-TOP-TOP
                         (IF (ATOM LIST2751) (GO LOOP-END-TOP))
                         (SETQ B-IND (CAR LIST2751))
                         (SETQ LIST2751 (CDR LIST2751))
                         (SETQ BD (NTH B-IND BDATA))
                         (LET* ((LIST2753 NIL)
                                (A-IND NIL)
                                (AD NIL)
                                (IV-VALUE NIL)
                                (IV-QUALITY NIL)
                                (COST NIL))
                           (BLOCK NIL
                             (TAGBODY
                               (SETQ LIST2753 (VAR-DOMAIN A))
                              LOOP-TOP-NIL
                               (IF (ATOM LIST2753) (GO LOOP-END-NIL))
                               (SETQ A-IND (CAR LIST2753))
                               (SETQ LIST2753 (CDR LIST2753))
                               (SETQ AD (NTH A-IND ADATA))
                               (MULTIPLE-VALUE-SETQ (IV-VALUE IV-QUALITY)
                                 (FOMUS::INTERVAL (FIRST AD) (THIRD AD)
                                  (FIRST BD) (THIRD BD)))
                               (SETQ COST
                                       (LET ((G3180 IV-QUALITY))
                                         (DECLARE (IGNORABLE G3180))
                                         (IF
                                          (OR (EQL G3180 '-2) (EQL G3180 '2))
                                          (PROGN
                                           NIL
                                           (IF (= -2 IV-QUALITY)
                                               (LET ((G3181 IV-VALUE))
                                                 (DECLARE (IGNORABLE G3181))
                                                 (IF (EQL G3181 '4)
                                                     (PROGN NIL 0)
                                                     (IF T (PROGN NIL 1) NIL)))
                                               (LET ((G3182 IV-VALUE))
                                                 (DECLARE (IGNORABLE G3182))
                                                 (IF (EQL G3182 '3)
                                                     (PROGN NIL 0)
                                                     (IF T (PROGN NIL 1)
                                                         NIL)))))
                                          (IF
                                           (OR (EQL G3180 '-3) (EQL G3180 '3))
                                           (PROGN NIL 20)
                                           (IF T (PROGN NIL 0) NIL)))))
                               (PROGN
                                (SETQ TEMP2755 (LIST COST))
                                (SETQ END-POINTER2754
                                        (IF RESULT2750
                                            (SETF (CDR END-POINTER2754)
                                                    TEMP2755)
                                            (SETQ RESULT2750 TEMP2755)))
                                RESULT2750)
                               (GO LOOP-TOP-NIL)
                              LOOP-END-NIL)
                             NIL))
                         (GO LOOP-TOP-TOP)
                        LOOP-END-TOP)
                       RESULT2750))
                   'VECTOR))
          (POST `(SVREF ,COSTS (+ V1 (* ,(LENGTH (VAR-DOMAIN A)) V2))) A B)
          (GO LOOP-TOP-NIL)
         LOOP-END-NIL)
        NIL))
    (LET* ((LIST2757 NIL) (V NIL) (LIST2758 NIL) (DATA NIL) (COST NIL))
      (BLOCK NIL
        (TAGBODY
          (SETQ LIST2757 VARS)
          (SETQ LIST2758 DOMAIN-DATA)
         LOOP-TOP-NIL
          (IF (ATOM LIST2757) (GO LOOP-END-NIL))
          (SETQ V (CAR LIST2757))
          (SETQ LIST2757 (CDR LIST2757))
          (IF (ATOM LIST2758) (GO LOOP-END-NIL))
          (SETQ DATA (CAR LIST2758))
          (SETQ LIST2758 (CDR LIST2758))
          (SETQ COST
                  (COERCE
                   (LET* ((LIST2760 NIL)
                          (M NIL)
                          (WN NIL)
                          (ACC NIL)
                          (RESULT2759 NIL)
                          (END-POINTER2761 NIL)
                          (TEMP2762 NIL))
                     (BLOCK NIL
                       (TAGBODY
                         (SETQ LIST2760 DATA)
                        LOOP-TOP-NIL
                         (IF (ATOM LIST2760) (GO LOOP-END-NIL))
                         (LET ((DSETQ3185 (CAR LIST2760)))
                           (SETQ M (CAR DSETQ3185))
                           (SETQ WN (CAR (CDR DSETQ3185)))
                           (SETQ ACC (CAR (CDR (CDR DSETQ3185))))
                           DSETQ3185)
                         (SETQ LIST2760 (CDR LIST2760))
                         (PROGN
                          (SETQ TEMP2762
                                  (LIST
                                   (IF (AND (= WN 6) (= ACC 1)) (PROGN 5)
                                       (IF (AND (= WN 0) (= ACC -1)) (PROGN 5)
                                           (IF (AND (= WN 3) (= ACC -1))
                                               (PROGN 5)
                                               (IF T (PROGN 0) NIL))))))
                          (SETQ END-POINTER2761
                                  (IF RESULT2759
                                      (SETF (CDR END-POINTER2761) TEMP2762)
                                      (SETQ RESULT2759 TEMP2762)))
                          RESULT2759)
                         (GO LOOP-TOP-NIL)
                        LOOP-END-NIL)
                       RESULT2759))
                   'VECTOR))
          (POST `(SVREF ,COST V1) V)
          (GO LOOP-TOP-NIL)
         LOOP-END-NIL)
        NIL))
    (MULTIPLE-VALUE-BIND
        (INDS COST)
        (ADS VARS :TABU-TENURE 5 :MAX-ITERATIONS 30000 :RESET-LIMIT 5)
      (PRINT (LIST 'COST COST))
      (LET* ((LIST2764 NIL)
             (IND NIL)
             (LIST2765 NIL)
             (DATA NIL)
             (ENTRY NIL)
             (LIST2766 NIL)
             (EV NIL)
             (LIST2767 NIL)
             (PROJ NIL))
        (BLOCK NIL
          (TAGBODY
            (SETQ LIST2764 INDS)
            (SETQ LIST2765 DOMAIN-DATA)
            (SETQ LIST2766 EVS)
            (SETQ LIST2767 (MAPCAR #'VAR-PROJ-COST VARS))
           LOOP-TOP-NIL
            (IF (ATOM LIST2764) (GO LOOP-END-NIL))
            (SETQ IND (CAR LIST2764))
            (SETQ LIST2764 (CDR LIST2764))
            (IF (ATOM LIST2765) (GO LOOP-END-NIL))
            (SETQ DATA (CAR LIST2765))
            (SETQ LIST2765 (CDR LIST2765))
            (SETQ ENTRY (NTH IND DATA))
            (IF (ATOM LIST2766) (GO LOOP-END-NIL))
            (SETQ EV (CAR LIST2766))
            (SETQ LIST2766 (CDR LIST2766))
            (IF (ATOM LIST2767) (GO LOOP-END-NIL))
            (SETQ PROJ (CAR LIST2767))
            (SETQ LIST2767 (CDR LIST2767))
            (LET* ((G3189 EV))
              (MULTIPLE-VALUE-BIND
                  (G3188)
                  (CONS (FIRST ENTRY) (THIRD ENTRY))
                (FUNCALL #'(SETF FOMUS:EVENT-NOTE) G3188 G3189)))
            (UNLESS (ZEROP PROJ)
              (PUSH `(:TEXT ,(PRINC-TO-STRING PROJ)) (FOMUS:EVENT-MARKS EV)))
            (GO LOOP-TOP-NIL)
           LOOP-END-NIL)
          NIL)))
    EVS)) 

